Root    ?= ../../.. ;
Location = prog/tools/AssetViewer ;
DriverLinkage = dynamic ;
include $(Root)/prog/tools/tools_setup.jam ;

Platform ?= win64 ;
UseD3DMulti = yes ;
UseD3DMultiList = DX11 stub ;
UseQuirrel = sq3r+ ;

DagorAnim_MEASURE_PERF = 1 ;
DagorMath_MEASURE_PERF = 1 ;
DagorFastPhys_MEASURE_PERF = 1 ;
# approximately ~5 sec (at 200 fps)
DagorAnim_MEASURE_PERF_FRAMES = 1000 ;
DagorMath_MEASURE_PERF_FRAMES = 1000 ;
DagorFastPhys_MEASURE_PERF_FRAMES = 1000 ;

TargetType  = exe ;
Target      = tools/assetViewer2.exe ;

include $(Root)/prog/_jBuild/defaults.jam ;
OutDir      = $(Root)/tools/dagor3_cdk/bin ;
if $(Platform) = win64 { OutDir = $(OutDir)64 ; }

AddIncludes =
  $(Root)/prog/tools/sharedInclude
  $(Root)/prog/tools/sceneTools/daEditor3/include
  $(Root)/prog/gameLibs/publicInclude/squirrel
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/engine2/sharedInclude
  $(Root)/prog/tools/sceneTools/impostorBaker
  $(Root)/prog/gameLibs/rendInst
;

Sources =
  main.cpp

  console.cpp
  av_version.cpp
  av_appwnd.cpp
  av_engine.cpp
  av_tree.cpp
  av_srvEngine.cpp
  av_dagored2stub.cpp
  av_environment.cpp
  av_plugins.cpp
  av_viewportWindow.cpp

  assetBuildCache.cpp

  assetViewerRes.rc
  av_util.cpp
  av_script_panel.cpp
  av_ecsPull.cpp

  badRefFinder.cpp
  compositeAssetCreator.cpp
  editableShader.cpp
;

UseProgLibs =
  engine2/startup
  engine2/math
  engine2/coreUtil
  engine2/workCycle
  engine2/lib3d
  engine2/shaders
  engine2/scene
  engine2/image
  engine2/guiBase

  engine2/drv/hid_mouse
  engine2/drv/hid_keyboard
  engine2/drv/drv3d_pc_multi

  engine2/gameRes
  engine2/libFx
  engine2/sceneRay
  engine2/perfMon
  engine2/consoleProc
  engine2/imgui

  engine2/anim
  engine2/animChar
  engine2/phys/fastPhys

  tools/libTools/assetMgr
  tools/libTools/assetMgrHlp
  tools/libTools/assetsGui

  tools/libTools/util
  tools/libTools/renderUtil
  tools/libTools/shaderResBuilder
  tools/libTools/EditorCore
  tools/libTools/fastPhysData
  tools/libTools/objectEditor
  tools/libTools/renderViewports
  tools/libTools/staticGeom
  tools/libTools/sceneBuilder
  tools/libTools/scriptHelpers
  tools/libTools/dtx
  tools/libTools/objCreator3d
  tools/libTools/winGuiWrapper
  tools/libTools/staticGeomUi
  tools/libTools/scriptPanelWrapper
  tools/libTools/math

  tools/sceneTools/daEditor3/services/dynRenderSrv
  tools/sceneTools/daEditor3/services/wind
  tools/sceneTools/daEditor3/services/riMgr
  tools/sceneTools/daEditor3/services/prefabMgr
  tools/sceneTools/daEditor3/services/fxMgr
  tools/sceneTools/daEditor3/services/efxMgr
  tools/sceneTools/daEditor3/services/physobjMgr
  tools/sceneTools/daEditor3/services/gameobjMgr
  tools/sceneTools/daEditor3/services/compositMgr
  tools/sceneTools/daEditor3/services/invalidEntityMgr
  tools/sceneTools/daEditor3/services/bitMaskMgr
  tools/sceneTools/daEditor3/services/dynModelMgr
  tools/sceneTools/daEditor3/services/animCharMgr
  tools/sceneTools/daEditor3/services/assetSrv
  tools/sceneTools/daEditor3/services/dxpFactory
  tools/sceneTools/daEditor3/services/lightSrv
  tools/sceneTools/daEditor3/services/dynModelMgr
  tools/sceneTools/daEditor3/services/physobjMgr
  tools/sceneTools/daEditor3/services/skiesSrv
  tools/sceneTools/daEditor3/services/colorRangeSrv
  tools/sceneTools/daEditor3/services/csgEntMgr
  tools/sceneTools/daEditor3/services/cableSrv
  tools/sceneTools/daEditor3/services/splineGenSrv
  tools/sceneTools/daEditor3/services/ecsMgr
  tools/sceneTools/daEditor3/services/webui
  tools/sceneTools/daEditor3/services/ecsInput
  tools/sceneTools/daEditor3/services/imguiMgr
  tools/sceneTools/daEditor3/services/dasMgr

  tools/sceneTools/impostorBaker/impostorUtil

  tools/libTools/propPanel2
  tools/libTools/sepGui
  tools/libTools/dagFileRW

  engine2/phys/physCommon
  engine2/phys/physBullet
  engine2/phys/physJolt
  gameLibs/vehiclePhys/vehiclePhys-BULLET
  gameLibs/render
  gameLibs/rendInst/riFx/stub
  gameLibs/landMesh
  gameLibs/textureUtil
  gameLibs/render/dof
  gameLibs/render/wind
  gameLibs/render/nodeBasedShader/stub
  gameLibs/nodeBasedShaderManager/stub
  gameLibs/ecs/rendInst/stub
  gameLibs/ecs/anim
  gameLibs/ecs/delayedAct

  gameLibs/quirrel/bindQuirrelEx
  commonFx/commonFxGame
  commonFx/commonFxTools

  tools/AssetViewer/Textures
  tools/AssetViewer/Nodes
  tools/AssetViewer/Prefabs
  tools/AssetViewer/LandClass
  tools/AssetViewer/Materials
  tools/AssetViewer/Splines
  tools/AssetViewer/collision
  tools/AssetViewer/Entity
  tools/AssetViewer/Grass
  tools/AssetViewer/TifMask
  tools/AssetViewer/PhysObj
  tools/AssetViewer/fxEdit
  tools/AssetViewer/FastPhys
  tools/AssetViewer/Custom
  tools/AssetViewer/RandomGrass
  tools/AssetViewer/csgEntity
  tools/AssetViewer/shaderGraph
  tools/AssetViewer/A2d
  tools/AssetViewer/animTree

  3rdPartyLibs/image/libpng-1.4.22
  3rdPartyLibs/arc/zlib-$(UseZlibVer)
  3rdPartyLibs/image/psdRead
  3rdPartyLibs/hash

  gameLibs/imguiInput
;
gamePulls =
  daECS/core/componentType.h # first line is used for include!
  game_pulls                 #second line is name of var
;

if [ GLOB $(Root)/prog/daNetGameLibs/motion_matching : * ] {
  UseProgLibs +=
    daNetGameLibs/motion_matching
  ;
  gamePulls +=
    daNetGameLibs_motion_matching_DAS_pull_AOT
    framework_motion_matching_pull
  ;
}

if [ GLOB $(Root)/skyquake/prog/tools : * ] {
  UseRootLibs =
    skyquake/prog/tools/wtUnit_av2
  ;
  CPPopt += -DHAS_PLUGIN_WT_UNIT ;
}

gamePulls +=
  actInThread_pull
;

gamePulls_action = make_module_pull_cpp ;
Sources += gamePulls.jamvar ;

ImportProgLibs = tools/libTools/daKernel ;
CoExportProgDlls = $(ImportProgLibs) ;

if ! $(DagoredRel) {
  LINKopt = -opt:noref ;
}

include $(Root)/prog/_jBuild/build.jam ;
