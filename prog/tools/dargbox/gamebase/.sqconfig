;
mount = sqstd=../../../scripts/sq/std
mount = darg=../../../scripts/sq/daRg
base_path = ../../../scripts/sq/stubs/
base_path = .

use_real_root = no

use_modules = yes ; enable to use "require()"
use_libs_by_default = yes ; what to do if library not found in this config
sqstd_register_mathlib = false ; ::pow, ::abs, ::sqrt, ::rand
sqstd_register_stringlib = false ; class regexp, format, strip, lstrip, split
register_std_math_native_module = yes ; math.sqrt, math.rand, math.fabs ...
register_std_string_native_module = yes ; string.format, string.lstrip, string.split ...
register_dir_extensions = yes ; dagor.scan_folder
sqstd_register_bloblib_native_module = yes ; class blob.blob, blob.blob.swap4, blob.blob.swap2 ...
sqstd_register_iolib_native_module = yes ; class io.file, io.file.writeblob, io.file.len, io.file.close ...
sqstd_register_systemlib_native_module = yes ; system.getenv, system.rename, system.time ...
sqrat_bind_dagor_logsys = yes ; dagor.debug, dagor.assertf, dagor.debug_dump_stack ...
sqrat_bind_dagor_3d = yes ; get_cur_view_itm
register_string_extensions = yes ; String.subst()
register_math_classes = no ; IPoint2, Point3, TMatrix, Color4 ...
register_reg_exp = yes ; class regexp2, regexp2.match, regexp2.replace ...
register_utf8 = yes ; class utf8, utf8.strtr, utf8.charCount ...
register_data_block = no ; class DataBlock
register_dagor_basic_api = yes ; dagor.runScript, dagor.includeOnce, dagor.debug, ::find_files_in_folder, :racevar ...
register_json = yes ; parse_json, string_to_json
sqstd_register_systemlib = no ; ::getenv, ::rename, :ime ...
extend_sq_base_lib = yes ; __get, __update, __merge ...
register_base_lib_extras = yes ; ::min, ::max, ::clamp
sqrat_bind_dagor_math = yes ; Point2, Point3, TMatrix, Color4 ...
register_sqrat_reg_exp = yes ; class regexp2, regexp2.match, regexp2.fullmatch, regexp2.replace
executeFile = ..\..\..\scripts\sq\stubs\daRg