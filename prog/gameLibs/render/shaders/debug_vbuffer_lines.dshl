include "shader_global.dshl"

float4 debug_line_color = (1, 1, 1, 1);
shader debug_shader
{
  channel float3 pos = pos;

  z_write = false;

  hlsl {
    struct VsOutput
    {
      float4 pos : SV_POSITION;
    };
  }

  (vs) {
    globtm@f44 = globtm;
  }

  hlsl(vs) {
    VsOutput debug_vs(float3 pos : POSITION)
    {
      VsOutput output;

      output.pos = mul(float4(pos, 1), globtm);
      return output;
    }
  }

  (ps) {
    debug_line_color@f4 = debug_line_color;
  }

  blend_src = sa; blend_dst = isa;
  blend_asrc = 0; blend_adst = 0;
  hlsl(ps)
  {
    float4 debug_ps(VsOutput input) : SV_Target
    {
      return debug_line_color;
    }
  }

  compile("target_ps", "debug_ps");
  compile("target_vs", "debug_vs");
}