// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testMapSerialization.proto

#pragma once


#include <protoConfig.h>


namespace proto
{
  namespace io
  {
    struct StreamTag;
    class OutputCodeStream;
    class InputCodeStream;
  }
}



class TestItem:
    public proto::SerializableVersioned
{
public:
  TestItem();
  ~TestItem();

  void clear();

  void touchRecursive(proto::version value);

  void saveToDB(
      proto::io::OutputCodeStream & stream,
      const proto::BinarySaveOptions & saveOptions) const;

  bool loadFromDB(proto::io::InputCodeStream & stream, proto::io::StreamTag tag);

  const proto::string & getName() const;
  void setName(const proto::string & value);

private:
  proto::string name;
};

typedef proto::ContainerVersioned<proto::UnorderedMap<proto::string, TestItem>::TType>
    TStringToTestItemUnorderedMap;


class TestMessage:
    public proto::SerializableVersioned
{
public:
  TestMessage();
  ~TestMessage();

  void clear();

  void touchRecursive(proto::version value);

  void saveToDB(
      proto::io::OutputCodeStream & stream,
      const proto::BinarySaveOptions & saveOptions) const;

  bool loadFromDB(proto::io::InputCodeStream & stream, proto::io::StreamTag tag);

  TStringToTestItemUnorderedMap & getItems();
  const TStringToTestItemUnorderedMap & getItems() const;

private:
  TStringToTestItemUnorderedMap items;
};


inline const proto::string & TestItem::getName() const
{
  return name;
}


inline void TestItem::setName(const proto::string & value)
{
  name = value;
}


inline TStringToTestItemUnorderedMap & TestMessage::getItems()
{
  return items;
}


inline const TStringToTestItemUnorderedMap & TestMessage::getItems() const
{
  return items;
}


// type traits
namespace proto
{
}

