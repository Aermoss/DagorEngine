_OBJ_SUFFIX  = .obj ;

VCUpdateVer  = 16.10.3 ;
_VC_DIR      = $(_DEVTOOL)/vc2019_$(VCUpdateVer) ;
_CLANG_DIR   = $(_DEVTOOL)/LLVM-$(CLangVer) ;
_VC_CRT_TYPE = -MD ;
_WINSDK_DIR = $(_DEVTOOL)/win.sdk.100 ;
_GDK_DIR = $(_DEVTOOL)/xbox.gdk.$(GdkVer)/$(GdkVer) ;


if ! [ GLOB $(_CLANG_DIR) : * ] { exit FATAL\: \"$(_CLANG_DIR)\" not found! ; }
if ! [ GLOB $(_VC_DIR) : * ] { exit FATAL\: \"$(_VC_DIR)\" not found!  Please, update DEVTOOLS ; }
if ! [ GLOB $(_GDK_DIR) : * ] { exit FATAL\: \"$(_GDK_DIR)\" not found!  Please, update DEVTOOLS ; }
if ! [ GLOB $(_DEVTOOL)/win.sdk.100/Include/$(GdkWinVer) : * ] { exit FATAL\: \"$(_DEVTOOL)/win.sdk.100/Include/$(GdkWinVer)\" not found!  Please, update DEVTOOLS ; }
if ! [ GLOB $(_VC_DIR)/redist/ : * ] { exit FATAL\: \"$(_VC_DIR)/redist\" not found!  Please, update DEVTOOLS ; }


local _DEF_C_CMDLINE =
  $(_PLATFORM_SPECIFIC_C_CMDLINE)
  -fms-compatibility-version=19.29.30038.1
  -X -D_TARGET_XBOX=1 -DWIN64 -Dasm=__asm -DWIN32_LEAN_AND_MEAN= -D_USE_MATH_DEFINES
  -DNOMINMAX
  -D_GAMING_XBOX=1
  -DWINAPI_FAMILY=WINAPI_FAMILY_GAMES
  -D_WIN32_WINNT=0x0602
  -D_TARGET_SIMD_SSE=4 -D_TARGET_64BIT=1 -D_ALLOW_KEYWORD_MACROS=
  -Di_strlen=(int)strlen
  /c /nologo /Zc:forScope /J /Zc:inline /Zc:wchar_t
  /Zc:dllexportInlines-
  -msse4.1 -mpopcnt

  -Wno-macro-redefined #instead of fixing auto-generated dav1d config
  -Wno-unknown-warning-option # for forward compat
  -Wno-c++11-narrowing
  -Wno-trigraphs
  -Wno-argument-outside-range
  -Wno-nonportable-include-path
  -Wno-ignored-attributes
  -fms-extensions
  -fms-compatibility
  -fdiagnostics-absolute-paths
  -Wno-invalid-offsetof
  -Wno-multichar
  -Wno-unused-function
  -Wno-inconsistent-missing-override
  -Wno-deprecated-builtins # __has_trivial_constructor etc in EASTL. See also https://github.com/llvm/llvm-project/commit/0b89d1d59f82cf5b45c250cd5c3351e43ce35ef9
  -Wno-invalid-token-paste
  -Wno-ignored-pragma-intrinsic
  -Wno-pragma-pack
  -Wno-microsoft
  -Wno-int-to-void-pointer-cast
  -Wno-expansion-to-defined
  -Wno-deprecated-declarations
  -Wno-constant-conversion
  -Wno-unused-local-typedef
  -Wno-ignored-pragmas
  -Wno-deprecated-declarations
  -Wno-switch
  -Werror=invalid-noreturn
  -Werror=return-type
;


if $(Sanitize) != disabled {
  _DEF_C_CMDLINE += -fsanitize=$(Sanitize) ;
}


if $(UseWholeOpt) = yes {
  UseLLDLink = yes ;
}


if $(Sanitize) != disabled {
  UseLLDLink = no ; # currently there is false positive for ODR violation on strin literals
}


local LINK_OPTIONS =
  /ignore:4099 # ignore missing pdbs, we don't ship them in devtools anymore, we store them on symsrv instead.
;

if $(UseLLDLink) != yes {
  _LINK         = $(_VC_DIR)/bin/Hostx64/x64/link.exe /nologo /machine:x64 $(LINK_OPTIONS) ;
  _LIB          = $(_VC_DIR)/bin/Hostx64/x64/lib.exe /nologo /machine:x64 ;
} else
{
  _LINK         = $(_CLANG_DIR)/bin/lld-link.exe /machine:x64 $(LINK_OPTIONS) ; #we have to allow /force:multiple, otherwise it is not linking with effects :(
  _LIB          = $(_CLANG_DIR)/bin/llvm-lib.exe /machine:x64 ;
}


_C_COMPILER = $(_CLANG_DIR)/bin/clang-cl.exe $(_DEF_C_CMDLINE) ;
_CPP_COMPILER = $(_C_COMPILER) -Xclang -std=c++$(CPPStd) ;
_ASM_COMPILER = $(_DEVTOOL)/nasm/nasm.exe -f win64 ;
_MASM_COMPILER = $(_VC_DIR)/bin/Hostx64/x64/ml64.exe -c -nologo ;


_INCLUDE     =
  $(_GDK_DIR)/GRDK/ExtensionLibraries/Xbox.XCurl.API/DesignTime/CommonConfiguration/neutral/Include
  $(_GDK_DIR)/GRDK/ExtensionLibraries/Xbox.Services.API.C/DesignTime/CommonConfiguration/Neutral/Include
  $(_GDK_DIR)/GXDK/gameKit/Include/
  $(_GDK_DIR)/GXDK/gameKit/Include/$(_PLATFORM_NAME)
  $(_GDK_DIR)/GRDK/gameKit/Include/
  $(_GDK_DIR)/GRDK/gameKit/Include/$(_PLATFORM_NAME)
  $(_WINSDK_DIR)/Include/$(GdkWinVer)/um
  $(_WINSDK_DIR)/Include/$(GdkWinVer)/shared
  $(_WINSDK_DIR)/Include/$(GdkWinVer)/winrt
  $(_WINSDK_DIR)/Include/$(GdkWinVer)/cppwinrt
  $(_WINSDK_DIR)/Include/$(GdkWinVer)/ucrt
  $(_VC_DIR)/include
;


if $(Config) = dbg {
  XboxLibraryFolder = Debug ;
} else {
  XboxLibraryFolder = Release ;
}


_LIBPATH     =
  $(_GDK_DIR)/GRDK/ExtensionLibraries/Xbox.XCurl.API/DesignTime/CommonConfiguration/neutral/Lib
  $(_GDK_DIR)/GRDK/ExtensionLibraries/Xbox.Services.API.C/DesignTime/CommonConfiguration/Neutral/Lib/$(XboxLibraryFolder)/v142
  $(_GDK_DIR)/GXDK/gameKit/lib/amd64
  $(_GDK_DIR)/GXDK/gameKit/lib/amd64/$(_PLATFORM_NAME)
  $(_GDK_DIR)/GRDK/gameKit/Lib/amd64
  $(_GDK_DIR)/GRDK/gameKit/Lib/amd64/$(_PLATFORM_NAME)
  $(_VC_DIR)/Lib/onecore/x64
  $(_WINSDK_DIR)/Lib/$(GdkWinVer)/um/x64
  $(_WINSDK_DIR)/Lib/$(GdkWinVer)/ucrt/x64
;


# make linker cmd-line ###
for lib in $(_LIBPATH) {
  _LINK += -libpath:$(lib) ;
  _LIB += -libpath:$(lib) ;
}


# make compiler cmd-line ###
_C_BASE_INCLUDES   = -I$(MasterPreInclude) -I$(Root)/prog/dagorInclude -I$(Root)/prog/1stPartyLibs -I$(Root)/prog/3rdPartyLibs ;
_CPP_BASE_INCLUDES = $(_C_BASE_INCLUDES) -I$(Root)/prog/3rdPartyLibs/eastl/include ;


for inc in $(_INCLUDE) {
  _CPP_BASE_INCLUDES += -imsvc $(inc) ;
  _C_BASE_INCLUDES   += -imsvc $(inc) ;
  _DEP_COMPILER += --x$(inc) ;
}


_DEF_C_CMDLINE = ;
